@model IndexViewModel

<style>
    .glyphicon {
        border: solid white;
        border-width: 0 3px 3px 0;
        display: inline-block;
        padding: 3px;
        margin: 0 5px;
    }

    .glyphicon-chevron-down {
        transform: rotate(45deg);
        -webkit-transform: rotate(45deg);
    }

    .glyphicon-chevron-up {
        transform: rotate(-135deg);
        -webkit-transform: rotate(-135deg);
    }

    .colorText {
        color: white;
    }

        .colorText:hover {
            color: gray;
        }

</style>

<h2>Table Cars</h2>
<form method="get">
    <div class="row justify-content-end">
        <div class="col-3 mb-3">
            <div class="input-group">
                <span class="input-group-text" id="inputGroupPrepend">Brand:</span>
                <select name="brand" asp-items="Model.FilterViewModel.Brands" class="form-select"></select>
            </div>
        </div>
        <div class="col-3 mb-3">
            <div class="input-group">
                <span class="input-group-text" id="inputGroupPrepend">Model:</span>
                <input name="name" value="@Model.FilterViewModel.SelectedModel" class="form-control">
            </div>
        </div>
        <div class="col-1 mb-3">
            <input class="btn btn-success" type="submit" value="Filter" />
        </div>
    </div>

</form>
<table class="table">
    <thead class="table-dark">
        <tr>
            <th scope="col">#</th>
            <th scope="col">
                <a class="colorText" asp-action="Cars"
                   asp-route-name="@(Model.FilterViewModel.SelectedModel)"
                   asp-route-brand="@(Model.FilterViewModel.SelectedBrand)"
                   asp-route-sortCars="@(Model.SortViewModel.BrandSort)">
                    Brand name
                </a>
                @if (Model.SortViewModel.BrandSortActive)
                {
                    <span class="glyphicon @(Model.SortViewModel.IsUp ? "glyphicon-chevron-up" : "glyphicon-chevron-down") "></span>
                }

            </th>
            <th scope="col">
                <a class="colorText" asp-action="Cars"
                   asp-route-name="@(Model.FilterViewModel.SelectedModel)"
                   asp-route-brand="@(Model.FilterViewModel.SelectedBrand)"
                   asp-route-sortCars="@(Model.SortViewModel.ModelSort)">
                    Model name
                </a>
                @if (Model.SortViewModel.ModelSortActive)
                {
                    <span class="glyphicon @(Model.SortViewModel.IsUp ? "glyphicon-chevron-up" : "glyphicon-chevron-down")"></span>
                }
            </th>
            <th scope="col">
                <a class="colorText" asp-action="Cars"
                   asp-route-name="@(Model.FilterViewModel.SelectedModel)"
                   asp-route-brand="@(Model.FilterViewModel.SelectedBrand)"
                   asp-route-sortCars="@(Model.SortViewModel.EquipmentSort)">
                    Equipment name
                </a>
                @if (Model.SortViewModel.EquipmentSortActive)
                {
                    <span class="glyphicon @(Model.SortViewModel.IsUp ? "glyphicon-chevron-up" : "glyphicon-chevron-down")"></span>
                }
            </th>
            <th scope="col">Country</th>
            <th scope="col">Fuel type</th>
            <th scope="col">Model year</th>
            <th scope="col">Price</th>
        </tr>
    </thead>
    <tbody>
        @{
            int i = 1;
            foreach (var item in Model.Cars)
            {
                <tr>
                    <th scope="row">@i</th>
                    <td>@item.Brand.NameBrand</td>
                    <td>@item.Model.NameModel</td>
                    <td>@item.Equipment.NameEquipment</td>
                    <td>@item.Brand.ProducingCountry</td>
                    <td>@item.Equipment.FuelType</td>
                    <td>@item.Equipment.ModelYear</td>
                    <td>@item.Equipment.PriceEquipment</td>
                </tr>
                i++;
            }
        }
    </tbody>
</table>

<nav>
    <ul class="pagination">
        @{
            int page = Model.PageViewModel.PageNumber;
        }
        <li class="page-item @(page == 1? "disabled":"")">
            <a class="page-link" asp-action="Cars" asp-controller="Car"
               asp-route-page="@(page - 1)"
               asp-route-name="@(Model.FilterViewModel.SelectedModel)"
               asp-route-brand="@(Model.FilterViewModel.SelectedBrand)"
               asp-route-sortCars="@(Model.SortViewModel.Current)" tabindex="-1">Попередня</a>
        </li>
        @for (int x = 1; x < Model.PageViewModel.TotalPages + 1; x++)
        {
            <li class="page-item @(page == x ? "active": "" )">
                <a class="page-link" asp-action="Cars" asp-controller="Car"
               asp-route-page="@x"
               asp-route-name="@(Model.FilterViewModel.SelectedModel)"
               asp-route-brand="@(Model.FilterViewModel.SelectedBrand)"
               asp-route-sortCars="@(Model.SortViewModel.Current)">
                    @x
                </a>
            </li>
        }
        <li class="page-item @(page == Model.PageViewModel.TotalPages? "disabled":"")">
            <a class="page-link" asp-action="Cars" asp-controller="Car"
               asp-route-page="@(page+1)"
               asp-route-name="@(Model.FilterViewModel.SelectedModel)"
               asp-route-brand="@(Model.FilterViewModel.SelectedBrand)"
               asp-route-sortCars="@(Model.SortViewModel.Current)">Наступна</a>
        </li>
    </ul>
</nav>